{"version":3,"sources":["../node_modules/lz-string/libs/lz-string.js","preview.js"],"names":["requireNude","window","Promise","Nude","resolve","addEventListener","then","hash","scale","markup","size","root","document","getElementById","theme","querySelector","props","html","dataset","LIGHT_SCHEME","DARK_SCHEME","HIGH_CONTRAST","LOW_CONTRAST","REDUCE_MOTION","clearSchemeSwitch","forEach","cls","classList","remove","clearContrastSwitch","clearReducedMotionSwitch","setScheme","type","nuScheme","setContrast","nuContrast","setReducedMotion","nuReduceMotion","applyOptions","options","setAttribute","hue","saturationType","removeAttribute","saturation","themeType","pastel","gap","radius","borderWidth","transitionTime","scheme","contrast","reducedMotion","location","parent","body","style","backgroundColor","preview","currentHash","slice","data","JSON","parse","decodeURIComponent","e","LZString","decompressFromEncodedURIComponent","console","log","replace","str","n","String","Number","width","height","transform","transformOrigin","s","eval","toString","setTimeout","innerHTML","event","element","href","activeElement","hidden","textContent","preventDefault","returnValue","init","catch","error"],"mappings":"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","file":"preview.3e7695fe.js","sourceRoot":"..","sourcesContent":["// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n","import LZString from 'lz-string';\n\nfunction requireNude() {\n  if (typeof window === 'undefined') return new Promise(() => {});\n\n  if (window.Nude) {\n    return Promise.resolve(window.Nude);\n  } else {\n    return new Promise((resolve) => {\n      window.addEventListener('nudeReady', () => {\n        resolve(window.Nude);\n      });\n    });\n  }\n}\n\nrequireNude()\n  .then((Nude) => {\n    let hash;\n    let scale;\n    let markup;\n    let size;\n\n    const root = document.getElementById('content');\n    const theme = document.querySelector('nu-theme');\n    const props = document.querySelector('nu-props');\n    const html = document.querySelector('html');\n    const { dataset } = html;\n    const LIGHT_SCHEME = 'nu-scheme-light';\n    const DARK_SCHEME = 'nu-scheme-dark';\n    const HIGH_CONTRAST = 'nu-contrast-more';\n    const LOW_CONTRAST = 'nu-contrast-no-preference';\n    const REDUCE_MOTION = 'nu-reduce-motion';\n\n    function clearSchemeSwitch() {\n      [LIGHT_SCHEME, DARK_SCHEME].forEach((cls) => html.classList.remove(cls));\n    }\n\n    function clearContrastSwitch() {\n      [HIGH_CONTRAST, LOW_CONTRAST].forEach((cls) =>\n        html.classList.remove(cls)\n      );\n    }\n\n    function clearReducedMotionSwitch() {\n      [REDUCE_MOTION].forEach((cls) => html.classList.remove(cls));\n    }\n\n    function setScheme(type) {\n      clearSchemeSwitch();\n\n      switch (type) {\n        case 'light':\n        case 'dark':\n          dataset.nuScheme = type;\n          break;\n        default:\n          delete dataset.nuScheme;\n      }\n    }\n\n    function setContrast(type) {\n      clearContrastSwitch();\n\n      switch (type) {\n        case 'more':\n        case 'no-preference':\n          dataset.nuContrast = type;\n          break;\n        default:\n          delete dataset.nuContrast;\n      }\n    }\n\n    function setReducedMotion(type) {\n      clearReducedMotionSwitch();\n\n      switch (type) {\n        case 'yes':\n          dataset.nuReduceMotion = '';\n          break;\n        default:\n          delete dataset.nuReduceMotion;\n      }\n    }\n\n    function applyOptions(options = {}) {\n      theme.setAttribute('hue', 'hue' in options ? options.hue : 270);\n\n      if (options.saturationType === 'auto') {\n        theme.removeAttribute('saturation');\n      } else {\n        theme.setAttribute('saturation', options.saturation || 50);\n      }\n\n      if (options.themeType !== 'main') {\n        theme.setAttribute('mod', options.themeType);\n      } else {\n        theme.removeAttribute('mod');\n      }\n\n      if (options.pastel) {\n        theme.setAttribute('pastel', '');\n      } else {\n        theme.removeAttribute('pastel');\n      }\n\n      props.setAttribute('gap', `${options.gap || '.5'}rem`);\n      props.setAttribute('radius', `${options.radius || '.5'}rem`);\n      props.setAttribute('border-width', `${options.borderWidth || '1'}px`);\n      props.setAttribute('transition', `${options.transitionTime || '80'}ms`);\n\n      setScheme(options.scheme || 'auto');\n      setContrast(options.contrast || 'auto');\n      setReducedMotion(options.reducedMotion || false);\n\n      if (window.location === window.parent.location) {\n        document.body.style.backgroundColor = 'var(--nu-main-bg-color)';\n      }\n    }\n\n    // const DEFAULT_OPTIONS = {\n    //   themeType: 'main',\n    //   hue: 272,\n    //   pastel: false,\n    //   saturation: 80,\n    //   saturationType: 'auto',\n    //   gap: 0.5,\n    //   borderWidth: 1,\n    //   radius: 0.5,\n    //   transitionTime: 80,\n    //   scheme: 'auto',\n    //   contrast: 'auto',\n    //   reducedMotion: 'auto',\n    // };\n    //\n    // function getStored(key, defaults) {\n    //   let data;\n    //\n    //   try {\n    //     data = JSON.parse(localStorage.getItem(key)).data;\n    //   } catch (e) {\n    //     data = defaults;\n    //   }\n    //\n    //   return data;\n    // }\n\n    function preview() {\n      const currentHash = window.location.hash.slice(1);\n\n      if (currentHash === hash) return;\n\n      let data = {};\n\n      try {\n        data = JSON.parse(decodeURIComponent(currentHash));\n      } catch (e) {\n        // do nothing\n\n        try {\n          data = JSON.parse(\n            LZString.decompressFromEncodedURIComponent(currentHash)\n          );\n        } catch (e) {\n          // do nothing\n\n          /* eslint-disable-next-line */\n          console.log('parsing error', e);\n\n          return;\n        }\n      }\n\n      size = data.size || 'md';\n      scale = data.scale || 1;\n      markup = data.markup || '';\n\n      markup = markup.replace(/responsive=\"[^\"]+?\"/g, (str) =>\n        str.replace(/[\\d.]+/g, (n) => String(Number(n) * scale))\n      );\n\n      const { body } = document;\n\n      body.style.width = `${100 / scale}%`;\n      body.style.height = `${100 / scale}%`;\n      body.style.transform = `scale(${scale}, ${scale})`;\n      body.style.transformOrigin = 'left top';\n\n      markup = markup.replace(/<script>[^]+?<\\/script>/gm, (s) => {\n        try {\n          /* eslint-disable-next-line */\n          eval(s.slice(8, -9));\n        } catch (e) {\n          /* eslint-disable-next-line */\n          console.log('preview:', e.toString());\n        }\n\n        return '';\n      });\n\n      setTimeout(() => {\n        root.innerHTML = markup;\n      });\n\n      root.setAttribute('size', size);\n\n      hash = currentHash;\n\n      applyOptions(data.options);\n    }\n\n    // window.addEventListener('hashchange', preview);\n\n    window.addEventListener('beforeunload', (event) => {\n      const element = document.querySelector(\n        '[nu-id=\"redirect-url\"], #redirect-url'\n      );\n      const { href } = document.activeElement;\n\n      if (!element || !href) return;\n\n      element.hidden = true;\n      element.textContent = href;\n\n      event.preventDefault();\n      event.returnValue = '';\n    });\n\n    preview();\n\n    Nude.init();\n  })\n  .catch(console.error);\n"]}